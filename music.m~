function [freqs] = music(x, max_signals)
%MUSIC algorithm for sinusoid parameter estimation

N = length(x);
%number of sinusoids
R = estimate_autocorrelation_function(x, N);
%M is the number of antenna, or the dimension of the autocorrelation matrix
%in our case.
M = find_periodicity(R,0.01);
%get autocorrelation matrix
%method 1
[corr, Rx] = corrmtx(x, M-1);
%method 2
%Rx = toeplitz(R(1:M));

%get eigenvalues
[eig_vec, eig_vals] = eig(Rx);
[eig_vals_sorted, inds] = sort(abs(diag(eig_vals)),'descend');

figure;
stem(1:M, eig_vals_sorted);title('Sorted eigenvalues');

nsignals = determine_number_of_sinusoids(eig_vals_sorted, max_signals);
%twice the number of real sinusoids
p = 2*nsignals;
noise_eigvals_pos = inds(p+1:M);
%eigenvectors spanning noise subspace
noise_eigvec = eig_vec(:,noise_eigvals_pos);

omega = -linspace(-pi,pi,M);
k = 0:M-1;
freqs = zeros(p,1);

end

